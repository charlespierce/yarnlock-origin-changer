#!/usr/bin/env node
'use strict';

const replacer = require('../lib/replacer');
const fs = require('fs');

async function main([file, from, to]) {

  if (!fs.existsSync(file) || typeof from !== 'string' || typeof to !== 'string') {
    console.log(help());
    process.exit(1);
  }
  fs.writeFileSync(file, replacer(fs.readFileSync(file, 'UTF8'), from, to));
  process.exit(0);
}

function help() {
  return `
  usage: yarnlock-origin-changer <lockfile> <from-origin> <to-origin>

    lockfile: path to the lockfile you  wish to update
    from-origin: original origin we plan to replace
    to-origin: origin we place to replace the original with

  Example:
    yarnlock-origin-changer ./yarn.lock https://registry.npmjs.org https://registry.yarnpkg.com
  `
}

main(process.argv.slice(2)).catch(e => {
  if (typeof e === 'object' && e !== null) {
    console.error(e.message || e)
  }
  console.log(help());
  process.exit(1);
});
